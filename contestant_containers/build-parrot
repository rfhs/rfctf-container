#!/bin/sh
set -e
VERS="0.34"
DISTRO="parrot"
if [ -n "$(docker ps --filter name="rfhs-${DISTRO}-ci" --format '{{ .ID }}' )" ]; then
	echo "Found existing rfhs-${DISTRO}-ci container... QUITTING"
	exit 1
fi
docker pull docker.io/parrotsec/core:latest
docker build --no-cache . --pull -f "Dockerfile.${DISTRO}" -t rfhs/${DISTRO}:${VERS}
docker tag rfhs/${DISTRO}:${VERS} rfhs/${DISTRO}:latest
docker run -d --rm --name "rfhs-${DISTRO}-ci" rfhs/${DISTRO}
printf "Sleeping 30 seconds so services have time to start up...\n"
sleep 30
if docker exec "rfhs-${DISTRO}-ci" /usr/local/sbin/contestant-checker excessive; then
  docker stop "rfhs-${DISTRO}-ci"
  if [ "$(hostname)" = "Nu" ] ; then
    docker push rfhs/${DISTRO}
    docker push rfhs/${DISTRO}:${VERS}
    docker push rfhs/${DISTRO}:latest
  fi
  exit_code=0
else
  if [ "$(hostname)" = "Nu" ] ; then
    printf "contestant-checker failed!\n"
    docker stop "rfhs-${DISTRO}-ci"
  else
    printf "contestant-checker failed, rfhs-%s-ci is still running for debugging...\n" "${DISTRO}"
  fi
  exit_code=1
fi
exit ${exit_code}
